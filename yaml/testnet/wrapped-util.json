hash: WTx7lgQOglzqU76yDNRm_fmA9Q7F_EEKZcFIcOlssWQ
sigs:
  4c5d103ca8b50c2f64b05bf48e8c671b877c15aeeba4efe2313e9969df7b7b9a: null
cmd: '{"networkId":"testnet04","payload":{"exec":{"data":{"ns":"wrapped","upgrade":false,"wrapped-ns-user":null,"wrapped.wrapped-util-admin":{"pred":"keys-2","keys":["4c5d103ca8b50c2f64b05bf48e8c671b877c15aeeba4efe2313e9969df7b7b9a","09ff0969b7d16c24c800d469dc718bcaa0786acd391bd3e2ab2459124c06dede","484fec87708033a9dacb8b9e58111ab74069ba3b8f61103f2ef06de72721313d"]}},"code":"\n(namespace (read-msg ''ns))\n\n(module wrapped-util GOVERNANCE\n\n  (use wrapped.wrapped-token-v1\n    [ ROLE_MODULE_ADMIN ROLE_BURNER ROLE_MINTER\n      ROLE_REVOKER ROLE_RESTRICT ])\n\n  (defcap GOVERNANCE ()\n    (enforce-keyset \"wrapped.wrapped-util-admin\"))\n\n  (defun all-roles ()\n    [ ROLE_MODULE_ADMIN\n      ROLE_MINTER\n      ROLE_BURNER\n      ROLE_REVOKER\n      ROLE_RESTRICT\n    ])\n\n  (defun validate-role (role:string)\n    (enforce (contains role (all-roles)) \"Invalid role\"))\n\n\n  (defun enforce-valid-amount\n    ( precision:integer\n      amount:decimal\n    )\n    (enforce (> amount 0.0) \"Positive non-zero amount\")\n    (enforce-precision precision amount)\n  )\n\n  (defun enforce-valid-account (account:string)\n    (enforce (> (length account) 2) \"minimum account length\")\n    (enforce (< (length account) 256) \"minimum account length\")\n    (enforce (is-charset CHARSET_LATIN1 account) \"valid charset\")\n  )\n\n  (defun enforce-precision\n    ( precision:integer\n      amount:decimal\n    )\n    (enforce\n      (= (floor amount precision) amount)\n      \"precision violation\")\n  )\n\n  (defun enforce-valid-transfer\n    ( sender:string\n      receiver:string\n      precision:integer\n      amount:decimal )\n    (enforce-valid-amount precision amount)\n    (enforce-valid-account sender)\n    (enforce-valid-account receiver)\n  )\n\n  (defun enforce-valid-interparty-transfer\n    ( sender:string\n      receiver:string\n      precision:integer\n      amount:decimal )\n    (enforce-valid-transfer sender receiver precision amount)\n    (enforce (!= sender receiver) \"Transfer to same account prohibited\")\n  )\n\n  (defun enforce-valid-xchain-transfer\n    ( target-chain:string\n      sender:string\n      receiver:string\n      precision:integer\n      amount:decimal )\n    (enforce-valid-transfer sender receiver precision amount)\n    (enforce (!= \"\" target-chain) \"empty target-chain\")\n    (enforce (!= (current-chain-id) target-chain)\n      \"cannot run cross-chain transfers to the same chain\")\n  )\n\n  (defun enforce-transfer-manager:decimal\n    ( managed:decimal\n      requested:decimal\n    )\n    (let ((newbal (- managed requested)))\n      (enforce (>= newbal 0.0)\n        (format \"TRANSFER exceeded for amount {}\" [managed]))\n      newbal)\n  )\n\n  (defun compute-debit:decimal (balance:decimal amount:decimal)\n    (enforce (<= amount balance) \"Insufficient funds\")\n    (- balance amount))\n\n  (defun current-chain-id:string ()\n    (at ''chain-id (chain-data))\n  )\n\n\n  (defun check-reserved:string (account:string)\n    \" Checks ACCOUNT for reserved name and returns type if \\\n    \\ found or empty string. Reserved names start with a \\\n    \\ single char and colon, e.g. ''c:foo'', which would return ''c'' as type.\"\n    (let ((pfx (take 2 account)))\n      (if (= \":\" (take -1 pfx)) (take 1 pfx) \"\")))\n\n  (defun enforce-reserved:bool (account:string guard:guard)\n    @doc \"Enforce reserved account name protocols.\"\n    (let ((r (check-reserved account)))\n      (if (= \"\" r) true\n        (if (= \"k\" r)\n          (enforce\n            (= (format \"{}\" [guard])\n               (format \"KeySet {keys: [{}],pred: keys-all}\"\n                       [(drop 2 account)]))\n            \"Single-key account protocol violation\")\n          (enforce false\n            (format \"Unrecognized reserved protocol: {}\" [r]))))))\n\n\n\n)\n\n(if (read-msg ''upgrade)\n  [\"upgrade\"]\n  [ (define-keyset \"wrapped.wrapped-util-admin\" ) ]\n)\n"}},"signers":[{"pubKey":"4c5d103ca8b50c2f64b05bf48e8c671b877c15aeeba4efe2313e9969df7b7b9a"}],"meta":{"creationTime":1664797217,"ttl":600,"gasLimit":150000,"chainId":"1","gasPrice":1.0e-7,"sender":"k:4c5d103ca8b50c2f64b05bf48e8c671b877c15aeeba4efe2313e9969df7b7b9a"},"nonce":"install wrapped-util"}'

